<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<task:annotation-driven executor="busexecutor"/>
	<task:executor id="busexecutor" pool-size="10"  />
	
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<context:component-scan base-package="com.jabong" />
	
	<context:property-placeholder location="/WEB-INF/classes/config/dbconnection.properties" />
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>	
    
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="/WEB-INF/classes/config/hibernate.cfg.xml" />
		<property name="hibernateProperties">
        <value>
            hibernate.dialect=${hibernate.dialect}
            hibernate.show_sql=${hibernate.show_sql}
            hibernate.format_sql=${hibernate.format_sql}
            hibernate.use_sql_comments=${hibernate.use_sql_comments}
        </value>
    </property>
    </bean>
     
    <bean id="applicationContext" class="com.jabong.services.util.ApplicationContextProvider"/> 
     
    <tx:annotation-driven />
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

	<bean id="bundleDao" class="com.jabong.models.dao.BundleDAO">
	    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean>    
	<bean id="voucherDao" class="com.jabong.models.dao.VoucherDAO">
	    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean>
	
	<bean id="bundleNotify" class="com.jabong.services.notification.BundleNotify">
		<property name="bundleDao" ref="bundleDao" />
	</bean>
	
	<bean id="voucherNotify" class="com.jabong.services.notification.VoucherNotify">
		<property name="voucherDao" ref="voucherDao" />
	</bean>
	 	
</beans>
